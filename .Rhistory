install.packages("RODBC")
library(RODBC)
library(packrat)
setwd('/Users/dflouriot/R/Cyclisme/Shiny/TDB_OCM/')
packrat::init(getwd())
setwd('/Users/dflouriot/R/Cyclisme/Shiny/TDB_OCM/')
packrat::init(getwd(),options = list(local.repos = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library/"))
packrat:::libDir()
packrat::off()
packrat:::libDir()
packrat::on(project = '/Users/dflouriot/R/Cyclisme/Shiny/TDB_OCM/',auto.snapshot = T )
#Vérifier si tous les packages ont été chargés
packrat::status()
#Mettre à jour les packages ajoutés ou supprimés
packrat::snapshot()
packrat::off()
packrat:::libDir()
packrat:::libDir()=""
packrat:::libDir() <- ""
packrat:::libDir() <- ''
#Vérifier si tous les packages ont été chargés
packrat::status()
#Nettoyer les packages inutiles
packrat::clean()
packrat::off()
setwd('/Users/dflouriot/R/Cyclisme/Shiny/TDB_OCM/')
packrat::init(getwd(),options = list(local.repos = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library/"))
# create a list of all installed packages
ip <- as.data.frame(installed.packages())
head(ip)
# if you use packrat or other, make sure that no packages in this library will be removed
ip <- subset(ip, !grepl("packrat", ip$Package))
View(ip)
ip <- ip[(ip[,"Package"] %in% c("Matrix")),]
# determine the library where the packages are installed
path.lib <- unique(ip$LibPath)
# create a vector with all the names of the packages you want to remove
pkgs.to.remove <- ip[,1]
head(pkgs.to.remove)
# remove the packages
sapply(pkgs.to.remove, remove.packages, lib = path.lib)
# create a list of all installed packages
ip <- as.data.frame(installed.packages())
# if you use packrat or other, make sure that no packages in this library will be removed
ip <- subset(ip, !grepl("packrat", ip$Package))
packrat::off()
# packrat::set_opts(symlink.system.packages = F)
# packrat::set_opts(local.repos = '/Library/Frameworks/R.framework/Versions/3.5/Resources/library/')
# packrat::set_opts(symlink.system.packages = F)
# packrat::set_opts(local.repos = '/Library/Frameworks/R.framework/Versions/3.5/Resources/library/')
setwd('/Users/dflouriot/R/Cyclisme/Shiny/TDB_OCM/')
packrat::off()
packrat::init(getwd(),options = list(local.repos = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library/"))
#ip <- ip[(ip[,"Package"] %in% c("Matrix")),]
ip <- ip[!(ip[,"Priority"] %in% c("base")),]
# create a list of all installed packages
ip <- as.data.frame(installed.packages())
head(ip)
# if you use packrat or other, make sure that no packages in this library will be removed
ip <- subset(ip, !grepl("packrat", ip$Package))
# we don't want to remove base or recommended packages either\
ip <- ip[!(ip[,"Priority"] %in% c("base", "recommended")),]
#ip <- ip[(ip[,"Package"] %in% c("Matrix")),]
ip <- ip[!(ip[,"Priority"] %in% c("base")),]
# create a list of all installed packages
ip <- as.data.frame(installed.packages())
head(ip)
# if you use packrat or other, make sure that no packages in this library will be removed
ip <- subset(ip, !grepl("packrat", ip$Package))
#ip <- ip[(ip[,"Package"] %in% c("Matrix")),]
ip <- ip[!(ip[,"Priority"] %in% c("base")),]
# determine the library where the packages are installed
path.lib <- unique(ip$LibPath)
# create a vector with all the names of the packages you want to remove
pkgs.to.remove <- ip[,1]
head(pkgs.to.remove)
# remove the packages
sapply(pkgs.to.remove, remove.packages, lib = path.lib)
packrat::off()
# packrat::set_opts(symlink.system.packages = F)
# packrat::set_opts(local.repos = '/Library/Frameworks/R.framework/Versions/3.5/Resources/library/')
setwd('/Users/dflouriot/R/Cyclisme/Shiny/TDB_OCM/')
packrat::init(getwd(),options = list(local.repos = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library/"))
